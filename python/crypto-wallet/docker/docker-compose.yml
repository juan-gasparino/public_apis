version: '3.9'

services:

  api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.dev
    restart: always
    container_name: api
    ports:
      - 5000:5000
      # This is only for debugging purpose, and should not be done in production
      - 6789:6789
    networks:
      - internal
    depends_on:
      - postgres
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../api:/app/api

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: database
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "database", "-U", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - 16543:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - internal
    depends_on:
        - postgres

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    networks:
      - internal

networks:
  internal:
    name: internal

volumes:
  portainer:
  postgres:
  pgadmin: